// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OtoSoft.Plant.DataAccess.Concrete.Contexts;

#nullable disable

namespace OtoSoft.Plant.DataAccess.Migrations
{
    [DbContext(typeof(HerbContext))]
    partial class HerbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OtoSoft.Plant.Entities.Concrete.Complaint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Complaints");
                });

            modelBuilder.Entity("OtoSoft.Plant.Entities.Concrete.ComplaintHerb", b =>
                {
                    b.Property<int>("HerbId")
                        .HasColumnType("int");

                    b.Property<int>("ComplaintId")
                        .HasColumnType("int");

                    b.HasKey("HerbId", "ComplaintId");

                    b.HasIndex("ComplaintId");

                    b.ToTable("ComplaintHerbs");
                });

            modelBuilder.Entity("OtoSoft.Plant.Entities.Concrete.Herb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Herbs");
                });

            modelBuilder.Entity("OtoSoft.Plant.Entities.Concrete.ComplaintHerb", b =>
                {
                    b.HasOne("OtoSoft.Plant.Entities.Concrete.Complaint", "Complaint")
                        .WithMany("ComplaintHerbs")
                        .HasForeignKey("ComplaintId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OtoSoft.Plant.Entities.Concrete.Herb", "Herb")
                        .WithMany("ComplaintHerbs")
                        .HasForeignKey("HerbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Complaint");

                    b.Navigation("Herb");
                });

            modelBuilder.Entity("OtoSoft.Plant.Entities.Concrete.Complaint", b =>
                {
                    b.Navigation("ComplaintHerbs");
                });

            modelBuilder.Entity("OtoSoft.Plant.Entities.Concrete.Herb", b =>
                {
                    b.Navigation("ComplaintHerbs");
                });
#pragma warning restore 612, 618
        }
    }
}
